// Code generated by mockery v2.32.0. DO NOT EDIT.

package mocks

import (
	rest "github.com/J-Obog/paidoff/rest"
	mock "github.com/stretchr/testify/mock"
)

// routeHandler is an autogenerated mock type for the routeHandler type
type routeHandler struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *routeHandler) Execute(_a0 *rest.Request) *rest.Response {
	ret := _m.Called(_a0)

	var r0 *rest.Response
	if rf, ok := ret.Get(0).(func(*rest.Request) *rest.Response); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*rest.Response)
		}
	}

	return r0
}

// newRouteHandler creates a new instance of routeHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newRouteHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *routeHandler {
	mock := &routeHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
